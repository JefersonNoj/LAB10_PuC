

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu May 05 12:14:19 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211                           
   212                           	psect	idataBANK0
   213  00BB                     __pidataBANK0:
   214                           
   215                           ;initializer for _mensaje
   216  00BB  3420               	retlw	32
   217  00BC  3420               	retlw	32
   218  00BD  3420               	retlw	32
   219  00BE  3420               	retlw	32
   220  00BF  3420               	retlw	32
   221  00C0  340D               	retlw	13
   222  00C1  340A               	retlw	10
   223                           
   224                           ;initializer for _string
   225  00C2  3448               	retlw	72
   226  00C3  346F               	retlw	111
   227  00C4  346C               	retlw	108
   228  00C5  3461               	retlw	97
   229  00C6  3420               	retlw	32
   230  00C7  346D               	retlw	109
   231  00C8  3475               	retlw	117
   232  00C9  346E               	retlw	110
   233  00CA  3464               	retlw	100
   234  00CB  346F               	retlw	111
   235  00CC  3420               	retlw	32
   236  00CD  340A               	retlw	10
   237  00CE  3400               	retlw	0
   238  0019                     _TXREG	set	25
   239  000B                     _INTCONbits	set	11
   240  0018                     _RCSTAbits	set	24
   241  0006                     _PORTB	set	6
   242  001A                     _RCREG	set	26
   243  000C                     _PIR1bits	set	12
   244  008C                     _PIE1bits	set	140
   245  009A                     _SPBRGH	set	154
   246  0099                     _SPBRG	set	153
   247  0098                     _TXSTAbits	set	152
   248  008F                     _OSCCONbits	set	143
   249  0086                     _TRISB	set	134
   250  0187                     _BAUDCTLbits	set	391
   251  0189                     _ANSELH	set	393
   252  0188                     _ANSEL	set	392
   253                           
   254                           	psect	cinit
   255  0011                     start_initialization:	
   256                           ; #config settings
   257                           
   258  0011                     __initialization:
   259                           
   260                           ; Initialize objects allocated to BANK0
   261  0011  1383               	bcf	3,7	;select IRP bank0
   262  0012  3034               	movlw	low (__pdataBANK0+20)
   263  0013  00FD               	movwf	btemp+-1
   264  0014  3000               	movlw	high __pidataBANK0
   265  0015  00FE               	movwf	btemp
   266  0016  30BB               	movlw	low __pidataBANK0
   267  0017  00FF               	movwf	btemp+1
   268  0018  3020               	movlw	low __pdataBANK0
   269  0019  0084               	movwf	4
   270  001A  120A  118A  20D3  120A  118A  	fcall	init_ram0
   271                           
   272                           ; Clear objects allocated to COMMON
   273  001F  01F5               	clrf	__pbssCOMMON& (0+127)
   274  0020  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   275  0021  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   276  0022  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   277  0023                     end_of_initialization:	
   278                           ;End of C runtime variable initialization code
   279                           
   280  0023                     __end_of__initialization:
   281  0023  0183               	clrf	3
   282  0024  120A  118A  289E   	ljmp	_main	;jump to C main() function
   283                           
   284                           	psect	bssCOMMON
   285  0075                     __pbssCOMMON:
   286  0075                     _caracter_cont:
   287  0075                     	ds	1
   288  0076                     _old_valor:
   289  0076                     	ds	1
   290  0077                     _bandera:
   291  0077                     	ds	1
   292  0078                     _indice:
   293  0078                     	ds	1
   294                           
   295                           	psect	dataBANK0
   296  0020                     __pdataBANK0:
   297  0020                     _mensaje:
   298  0020                     	ds	7
   299  0027                     _string:
   300  0027                     	ds	13
   301                           
   302                           	psect	inittext
   303  00CF                     init_fetch0:	
   304                           ;	Called with low address in FSR and high address in W
   305                           
   306  00CF  087E               	movf	btemp,w
   307  00D0  008A               	movwf	10
   308  00D1  087F               	movf	btemp+1,w
   309  00D2  0082               	movwf	2
   310  00D3                     init_ram0:	
   311                           ;Called with:
   312                           ;	high address of idata address in btemp 
   313                           ;	low address of idata address in btemp+1 
   314                           ;	low address of data in FSR
   315                           ;	high address + 1 of data in btemp-1
   316                           
   317  00D3  120A  118A  20CF  120A  118A  	fcall	init_fetch0
   318  00D8  0080               	movwf	0
   319  00D9  0A84               	incf	4,f
   320  00DA  0804               	movf	4,w
   321  00DB  067D               	xorwf	btemp+-1,w
   322  00DC  1903               	btfsc	3,2
   323  00DD  3400               	retlw	0
   324  00DE  0AFF               	incf	btemp+1,f
   325  00DF  1903               	btfsc	3,2
   326  00E0  0AFE               	incf	btemp,f
   327  00E1  28D3               	goto	init_ram0
   328                           
   329                           	psect	cstackCOMMON
   330  0070                     __pcstackCOMMON:
   331  0070                     ?_setup:
   332  0070                     ?_imp_cadena:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_isr:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ??_isr:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_main:	
   342                           ; 1 bytes @ 0x0
   343                           
   344                           
   345                           ; 1 bytes @ 0x0
   346  0070                     	ds	4
   347  0074                     ??_setup:
   348  0074                     ??_imp_cadena:	
   349                           ; 1 bytes @ 0x4
   350                           
   351                           
   352                           ; 1 bytes @ 0x4
   353  0074                     	ds	1
   354                           
   355                           	psect	cstackBANK0
   356  0034                     __pcstackBANK0:
   357  0034                     imp_cadena@arreglo:
   358                           
   359                           ; 1 bytes @ 0x0
   360  0034                     	ds	1
   361  0035                     imp_cadena@cursor:
   362                           
   363                           ; 2 bytes @ 0x1
   364  0035                     	ds	2
   365  0037                     ??_main:
   366                           
   367                           ; 1 bytes @ 0x3
   368  0037                     	ds	3
   369                           
   370                           	psect	maintext
   371  009E                     __pmaintext:	
   372 ;;
   373 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   374 ;;
   375 ;; *************** function _main *****************
   376 ;; Defined at:
   377 ;;		line 61 in file "mainL10.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;		None
   380 ;; Auto vars:     Size  Location     Type
   381 ;;		None
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      void 
   384 ;; Registers used:
   385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   386 ;; Tracked objects:
   387 ;;		On entry : B00/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   391 ;;      Params:         0       0       0       0       0
   392 ;;      Locals:         0       0       0       0       0
   393 ;;      Temps:          0       3       0       0       0
   394 ;;      Totals:         0       3       0       0       0
   395 ;;Total ram usage:        3 bytes
   396 ;; Hardware stack levels required when called: 2
   397 ;; This function calls:
   398 ;;		_imp_cadena
   399 ;;		_setup
   400 ;; This function is called by:
   401 ;;		Startup code after reset
   402 ;; This function uses a non-reentrant model
   403 ;;
   404                           
   405  009E                     _main:	
   406                           ;psect for function _main
   407                           
   408  009E                     l797:	
   409                           ;incstack = 0
   410                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   411                           
   412                           
   413                           ;mainL10.c: 62:     setup();
   414  009E  120A  118A  2027  120A  118A  	fcall	_setup
   415  00A3                     l799:
   416                           
   417                           ;mainL10.c: 64:         _delay((unsigned long)((1000)*(1000000/4000.0)));
   418  00A3  3002               	movlw	2
   419  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   420  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   421  00A6  00B9               	movwf	??_main+2
   422  00A7  3045               	movlw	69
   423  00A8  00B8               	movwf	??_main+1
   424  00A9  30A9               	movlw	169
   425  00AA  00B7               	movwf	??_main
   426  00AB                     u117:
   427  00AB  0BB7               	decfsz	??_main,f
   428  00AC  28AB               	goto	u117
   429  00AD  0BB8               	decfsz	??_main+1,f
   430  00AE  28AB               	goto	u117
   431  00AF  0BB9               	decfsz	??_main+2,f
   432  00B0  28AB               	goto	u117
   433  00B1                     l801:
   434                           
   435                           ;mainL10.c: 65:         imp_cadena(string);
   436  00B1  3027               	movlw	(low (_string| 0))& (0+255)
   437  00B2  120A  118A  207B  120A  118A  	fcall	_imp_cadena
   438  00B7  28A3               	goto	l799
   439  00B8  120A  118A  280E   	ljmp	start
   440  00BB                     __end_of_main:
   441                           
   442                           	psect	text1
   443  0027                     __ptext1:	
   444 ;; *************** function _setup *****************
   445 ;; Defined at:
   446 ;;		line 71 in file "mainL10.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;		None
   449 ;; Auto vars:     Size  Location     Type
   450 ;;		None
   451 ;; Return value:  Size  Location     Type
   452 ;;                  1    wreg      void 
   453 ;; Registers used:
   454 ;;		wreg, status,2, status,0
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   460 ;;      Params:         0       0       0       0       0
   461 ;;      Locals:         0       0       0       0       0
   462 ;;      Temps:          0       0       0       0       0
   463 ;;      Totals:         0       0       0       0       0
   464 ;;Total ram usage:        0 bytes
   465 ;; Hardware stack levels used: 1
   466 ;; Hardware stack levels required when called: 1
   467 ;; This function calls:
   468 ;;		Nothing
   469 ;; This function is called by:
   470 ;;		_main
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474  0027                     _setup:	
   475                           ;psect for function _setup
   476                           
   477  0027                     l727:	
   478                           ;incstack = 0
   479                           ; Regs used in _setup: [wreg+status,2+status,0]
   480                           
   481                           
   482                           ;mainL10.c: 72:     ANSEL = 0;
   483  0027  1683               	bsf	3,5	;RP0=1, select bank3
   484  0028  1703               	bsf	3,6	;RP1=1, select bank3
   485  0029  0188               	clrf	8	;volatile
   486                           
   487                           ;mainL10.c: 73:     ANSELH = 0;
   488  002A  0189               	clrf	9	;volatile
   489                           
   490                           ;mainL10.c: 75:     TRISB = 0;
   491  002B  1683               	bsf	3,5	;RP0=1, select bank1
   492  002C  1303               	bcf	3,6	;RP1=0, select bank1
   493  002D  0186               	clrf	6	;volatile
   494                           
   495                           ;mainL10.c: 76:     PORTB = 0;
   496  002E  1283               	bcf	3,5	;RP0=0, select bank0
   497  002F  1303               	bcf	3,6	;RP1=0, select bank0
   498  0030  0186               	clrf	6	;volatile
   499  0031                     l729:
   500                           
   501                           ;mainL10.c: 78:     OSCCONbits.IRCF = 0b100;
   502  0031  1683               	bsf	3,5	;RP0=1, select bank1
   503  0032  1303               	bcf	3,6	;RP1=0, select bank1
   504  0033  080F               	movf	15,w	;volatile
   505  0034  398F               	andlw	-113
   506  0035  3840               	iorlw	64
   507  0036  008F               	movwf	15	;volatile
   508  0037                     l731:
   509                           
   510                           ;mainL10.c: 79:     OSCCONbits.SCS = 1;
   511  0037  140F               	bsf	15,0	;volatile
   512  0038                     l733:
   513                           
   514                           ;mainL10.c: 83:     TXSTAbits.SYNC = 0;
   515  0038  1218               	bcf	24,4	;volatile
   516  0039                     l735:
   517                           
   518                           ;mainL10.c: 84:     TXSTAbits.BRGH = 1;
   519  0039  1518               	bsf	24,2	;volatile
   520  003A                     l737:
   521                           
   522                           ;mainL10.c: 85:     BAUDCTLbits.BRG16 = 1;
   523  003A  1683               	bsf	3,5	;RP0=1, select bank3
   524  003B  1703               	bsf	3,6	;RP1=1, select bank3
   525  003C  1587               	bsf	7,3	;volatile
   526  003D                     l739:
   527                           
   528                           ;mainL10.c: 87:     SPBRG = 25;
   529  003D  3019               	movlw	25
   530  003E  1683               	bsf	3,5	;RP0=1, select bank1
   531  003F  1303               	bcf	3,6	;RP1=0, select bank1
   532  0040  0099               	movwf	25	;volatile
   533  0041                     l741:
   534                           
   535                           ;mainL10.c: 88:     SPBRGH = 0;
   536  0041  019A               	clrf	26	;volatile
   537  0042                     l743:
   538                           
   539                           ;mainL10.c: 90:     RCSTAbits.SPEN = 1;
   540  0042  1283               	bcf	3,5	;RP0=0, select bank0
   541  0043  1303               	bcf	3,6	;RP1=0, select bank0
   542  0044  1798               	bsf	24,7	;volatile
   543  0045                     l745:
   544                           
   545                           ;mainL10.c: 91:     RCSTAbits.RX9 = 0;
   546  0045  1318               	bcf	24,6	;volatile
   547  0046                     l747:
   548                           
   549                           ;mainL10.c: 92:     TXSTAbits.TXEN = 1;
   550  0046  1683               	bsf	3,5	;RP0=1, select bank1
   551  0047  1303               	bcf	3,6	;RP1=0, select bank1
   552  0048  1698               	bsf	24,5	;volatile
   553  0049                     l749:
   554                           
   555                           ;mainL10.c: 93:     RCSTAbits.CREN = 1;
   556  0049  1283               	bcf	3,5	;RP0=0, select bank0
   557  004A  1303               	bcf	3,6	;RP1=0, select bank0
   558  004B  1618               	bsf	24,4	;volatile
   559  004C                     l751:
   560                           
   561                           ;mainL10.c: 94:     TXSTAbits.TX9 = 0;
   562  004C  1683               	bsf	3,5	;RP0=1, select bank1
   563  004D  1303               	bcf	3,6	;RP1=0, select bank1
   564  004E  1318               	bcf	24,6	;volatile
   565  004F                     l753:
   566                           
   567                           ;mainL10.c: 97:     INTCONbits.GIE = 1;
   568  004F  178B               	bsf	11,7	;volatile
   569  0050                     l755:
   570                           
   571                           ;mainL10.c: 98:     INTCONbits.PEIE = 1;
   572  0050  170B               	bsf	11,6	;volatile
   573  0051                     l757:
   574                           
   575                           ;mainL10.c: 99:     PIE1bits.RCIE = 1;
   576  0051  168C               	bsf	12,5	;volatile
   577  0052                     l66:
   578  0052  0008               	return
   579  0053                     __end_of_setup:
   580                           
   581                           	psect	text2
   582  007B                     __ptext2:	
   583 ;; *************** function _imp_cadena *****************
   584 ;; Defined at:
   585 ;;		line 104 in file "mainL10.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;  arreglo         1    wreg     PTR unsigned char 
   588 ;;		 -> string(13), 
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  arreglo         1    0[BANK0 ] PTR unsigned char 
   591 ;;		 -> string(13), 
   592 ;;  cursor          2    1[BANK0 ] int 
   593 ;; Return value:  Size  Location     Type
   594 ;;                  1    wreg      void 
   595 ;; Registers used:
   596 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   602 ;;      Params:         0       0       0       0       0
   603 ;;      Locals:         0       3       0       0       0
   604 ;;      Temps:          1       0       0       0       0
   605 ;;      Totals:         1       3       0       0       0
   606 ;;Total ram usage:        4 bytes
   607 ;; Hardware stack levels used: 1
   608 ;; Hardware stack levels required when called: 1
   609 ;; This function calls:
   610 ;;		Nothing
   611 ;; This function is called by:
   612 ;;		_main
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616  007B                     _imp_cadena:	
   617                           ;psect for function _imp_cadena
   618                           
   619                           
   620                           ;incstack = 0
   621                           ; Regs used in _imp_cadena: [wreg-fsr0h+status,2+status,0]
   622                           ;imp_cadena@arreglo stored from wreg
   623  007B  1283               	bcf	3,5	;RP0=0, select bank0
   624  007C  1303               	bcf	3,6	;RP1=0, select bank0
   625  007D  00B4               	movwf	imp_cadena@arreglo
   626  007E                     l789:
   627                           
   628                           ;mainL10.c: 105:     int cursor = 0;
   629  007E  01B5               	clrf	imp_cadena@cursor
   630  007F  01B6               	clrf	imp_cadena@cursor+1
   631                           
   632                           ;mainL10.c: 106:     while(arreglo[cursor]!=0){
   633  0080  2892               	goto	l795
   634  0081                     l70:
   635                           
   636                           ;mainL10.c: 107:         if (PIR1bits.TXIF){
   637  0081  1E0C               	btfss	12,4	;volatile
   638  0082  2884               	goto	u91
   639  0083  2885               	goto	u90
   640  0084                     u91:
   641  0084  2892               	goto	l795
   642  0085                     u90:
   643  0085                     l791:
   644                           
   645                           ;mainL10.c: 108:             TXREG = arreglo[cursor];
   646  0085  0835               	movf	imp_cadena@cursor,w
   647  0086  0734               	addwf	imp_cadena@arreglo,w
   648  0087  00F4               	movwf	??_imp_cadena
   649  0088  0874               	movf	??_imp_cadena,w
   650  0089  0084               	movwf	4
   651  008A  0800               	movf	0,w
   652  008B  0099               	movwf	25	;volatile
   653  008C                     l793:
   654                           
   655                           ;mainL10.c: 109:             cursor++;
   656  008C  3001               	movlw	1
   657  008D  07B5               	addwf	imp_cadena@cursor,f
   658  008E  1803               	skipnc
   659  008F  0AB6               	incf	imp_cadena@cursor+1,f
   660  0090  3000               	movlw	0
   661  0091  07B6               	addwf	imp_cadena@cursor+1,f
   662  0092                     l795:
   663                           
   664                           ;mainL10.c: 106:     while(arreglo[cursor]!=0){
   665  0092  0835               	movf	imp_cadena@cursor,w
   666  0093  0734               	addwf	imp_cadena@arreglo,w
   667  0094  00F4               	movwf	??_imp_cadena
   668  0095  0874               	movf	??_imp_cadena,w
   669  0096  0084               	movwf	4
   670  0097  1383               	bcf	3,7	;select IRP bank0
   671  0098  0800               	movf	0,w
   672  0099  1D03               	btfss	3,2
   673  009A  289C               	goto	u101
   674  009B  289D               	goto	u100
   675  009C                     u101:
   676  009C  2881               	goto	l70
   677  009D                     u100:
   678  009D                     l73:
   679  009D  0008               	return
   680  009E                     __end_of_imp_cadena:
   681                           
   682                           	psect	text3
   683  0053                     __ptext3:	
   684 ;; *************** function _isr *****************
   685 ;; Defined at:
   686 ;;		line 49 in file "mainL10.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   700 ;;      Params:         0       0       0       0       0
   701 ;;      Locals:         0       0       0       0       0
   702 ;;      Temps:          4       0       0       0       0
   703 ;;      Totals:         4       0       0       0       0
   704 ;;Total ram usage:        4 bytes
   705 ;; Hardware stack levels used: 1
   706 ;; This function calls:
   707 ;;		Nothing
   708 ;; This function is called by:
   709 ;;		Interrupt level 1
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713  0053                     _isr:	
   714                           ;psect for function _isr
   715                           
   716  0053                     i1l769:
   717                           
   718                           ;mainL10.c: 50:     if(PIR1bits.RCIF){
   719  0053  1283               	bcf	3,5	;RP0=0, select bank0
   720  0054  1303               	bcf	3,6	;RP1=0, select bank0
   721  0055  1E8C               	btfss	12,5	;volatile
   722  0056  2858               	goto	u7_21
   723  0057  2859               	goto	u7_20
   724  0058                     u7_21:
   725  0058  2872               	goto	i1l55
   726  0059                     u7_20:
   727  0059                     i1l771:
   728                           
   729                           ;mainL10.c: 51:         bandera = 0;
   730  0059  01F7               	clrf	_bandera
   731  005A                     i1l773:
   732                           
   733                           ;mainL10.c: 52:         mensaje[caracter_cont] = RCREG;
   734  005A  081A               	movf	26,w	;volatile
   735  005B  00F0               	movwf	??_isr
   736  005C  0875               	movf	_caracter_cont,w
   737  005D  3E20               	addlw	(low (_mensaje| 0))& (0+255)
   738  005E  0084               	movwf	4
   739  005F  0870               	movf	??_isr,w
   740  0060  1383               	bcf	3,7	;select IRP bank0
   741  0061  0080               	movwf	0
   742  0062                     i1l775:
   743                           
   744                           ;mainL10.c: 53:         PORTB = mensaje[caracter_cont];
   745  0062  0875               	movf	_caracter_cont,w
   746  0063  3E20               	addlw	(low (_mensaje| 0))& (0+255)
   747  0064  0084               	movwf	4
   748  0065  0800               	movf	0,w
   749  0066  0086               	movwf	6	;volatile
   750  0067                     i1l777:
   751                           
   752                           ;mainL10.c: 54:         caracter_cont++;
   753  0067  3001               	movlw	1
   754  0068  00F0               	movwf	??_isr
   755  0069  0870               	movf	??_isr,w
   756  006A  07F5               	addwf	_caracter_cont,f
   757  006B                     i1l779:
   758                           
   759                           ;mainL10.c: 55:         if (caracter_cont > 4)
   760  006B  3005               	movlw	5
   761  006C  0275               	subwf	_caracter_cont,w
   762  006D  1C03               	skipc
   763  006E  2870               	goto	u8_21
   764  006F  2871               	goto	u8_20
   765  0070                     u8_21:
   766  0070  2872               	goto	i1l55
   767  0071                     u8_20:
   768  0071                     i1l781:
   769                           
   770                           ;mainL10.c: 56:             caracter_cont = 0;
   771  0071  01F5               	clrf	_caracter_cont
   772  0072                     i1l55:
   773  0072  0873               	movf	??_isr+3,w
   774  0073  008A               	movwf	10
   775  0074  0872               	movf	??_isr+2,w
   776  0075  0084               	movwf	4
   777  0076  0E71               	swapf	??_isr+1,w
   778  0077  0083               	movwf	3
   779  0078  0EFE               	swapf	btemp,f
   780  0079  0E7E               	swapf	btemp,w
   781  007A  0009               	retfie
   782  007B                     __end_of_isr:
   783  007E                     btemp	set	126	;btemp
   784  007E                     wtemp0	set	126
   785                           
   786                           	psect	intentry
   787  0004                     __pintentry:	
   788                           ;incstack = 0
   789                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
   790                           
   791  0004                     interrupt_function:
   792  007E                     saved_w	set	btemp
   793  0004  00FE               	movwf	btemp
   794  0005  0E03               	swapf	3,w
   795  0006  00F1               	movwf	??_isr+1
   796  0007  0804               	movf	4,w
   797  0008  00F2               	movwf	??_isr+2
   798  0009  080A               	movf	10,w
   799  000A  00F3               	movwf	??_isr+3
   800  000B  120A  118A  2853   	ljmp	_isr
   801                           
   802                           	psect	idloc
   803                           
   804                           ;Config register IDLOC0 @ 0x2000
   805                           ;	unspecified, using default values
   806  2000                     	org	8192
   807  2000  3FFF               	dw	16383
   808                           
   809                           ;Config register IDLOC1 @ 0x2001
   810                           ;	unspecified, using default values
   811  2001                     	org	8193
   812  2001  3FFF               	dw	16383
   813                           
   814                           ;Config register IDLOC2 @ 0x2002
   815                           ;	unspecified, using default values
   816  2002                     	org	8194
   817  2002  3FFF               	dw	16383
   818                           
   819                           ;Config register IDLOC3 @ 0x2003
   820                           ;	unspecified, using default values
   821  2003                     	org	8195
   822  2003  3FFF               	dw	16383
   823                           
   824                           	psect	config
   825                           
   826                           ;Config register CONFIG1 @ 0x2007
   827                           ;	Oscillator Selection bits
   828                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   829                           ;	Watchdog Timer Enable bit
   830                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   831                           ;	Power-up Timer Enable bit
   832                           ;	PWRTE = OFF, PWRT disabled
   833                           ;	RE3/MCLR pin function select bit
   834                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   835                           ;	Code Protection bit
   836                           ;	CP = OFF, Program memory code protection is disabled
   837                           ;	Data Code Protection bit
   838                           ;	CPD = OFF, Data memory code protection is disabled
   839                           ;	Brown Out Reset Selection bits
   840                           ;	BOREN = OFF, BOR disabled
   841                           ;	Internal External Switchover bit
   842                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   843                           ;	Fail-Safe Clock Monitor Enabled bit
   844                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   845                           ;	Low Voltage Programming Enable bit
   846                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   847                           ;	In-Circuit Debugger Mode bit
   848                           ;	DEBUG = 0x1, unprogrammed default
   849  2007                     	org	8199
   850  2007  20D4               	dw	8404
   851                           
   852                           ;Config register CONFIG2 @ 0x2008
   853                           ;	Brown-out Reset Selection bit
   854                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   855                           ;	Flash Program Memory Self Write Enable bits
   856                           ;	WRT = OFF, Write protection off
   857  2008                     	org	8200
   858  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      6      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    imp_cadena@arreglo	PTR unsigned char  size(1) Largest target is 13
		 -> string(BANK0[13]), 


Critical Paths under _main in COMMON

    _main->_imp_cadena

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_imp_cadena

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     166
                                              3 BANK0      3     3      0
                         _imp_cadena
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _imp_cadena                                           4     4      0     166
                                              4 COMMON     1     1      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _imp_cadena
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      6      1A       5       32.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      23      12        0.0%
ABS                  0      0      23       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu May 05 12:14:19 2022

                      pc 0002                       l70 0081                       l73 009D  
                     l66 0052                       u90 0085                       u91 0084  
                     fsr 0004                      l801 00B1                      l731 0037  
                    l741 0041                      l733 0038                      l751 004C  
                    l743 0042                      l735 0039                      l727 0027  
                    l753 004F                      l745 0045                      l737 003A  
                    l729 0031                      l755 0050                      l747 0046  
                    l739 003D                      l757 0051                      l749 0049  
                    l791 0085                      l793 008C                      l795 0092  
                    l789 007E                      l797 009E                      l799 00A3  
                    u100 009D                      u101 009C                      u117 00AB  
                    _isr 0053                      fsr0 0004                      indf 0000  
                   ?_isr 0070                     i1l55 0072                     u7_20 0059  
                   u7_21 0058                     u8_20 0071                     u8_21 0070  
                   _main 009E                     btemp 007E                     start 000E  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l771 0059                    i1l781 0071                    i1l773 005A  
                  i1l775 0062                    i1l777 0067                    i1l769 0053  
                  i1l779 006B                    _RCREG 001A                    _SPBRG 0099  
                  _PORTB 0006                    _TRISB 0086                    _TXREG 0019  
                  _setup 0027                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 00BB  
                 ??_main 0037                   ?_setup 0070                   _ANSELH 0189  
                 _SPBRGH 009A                   _indice 0078                   _string 0027  
                 saved_w 007E  __end_of__initialization 0023           __pcstackCOMMON 0070  
           __pidataBANK0 00BB            __end_of_setup 0053                  ??_setup 0074  
             __pmaintext 009E               __pintentry 0004         imp_cadena@cursor 0035  
             _imp_cadena 007B                  _bandera 0077                  __ptext1 0027  
                __ptext2 007B                  __ptext3 0053                  _mensaje 0020  
   end_of_initialization 0023                _RCSTAbits 0018            _caracter_cont 0075  
              _TXSTAbits 0098              ?_imp_cadena 0070              _BAUDCTLbits 0187  
    start_initialization 0011              __end_of_isr 007B               init_fetch0 00CF  
            __pdataBANK0 0020              __pbssCOMMON 0075                ___latbits 0002  
          __pcstackBANK0 0034                _old_valor 0076        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C        imp_cadena@arreglo 0034  
           ??_imp_cadena 0074       __end_of_imp_cadena 009E               _INTCONbits 000B  
               init_ram0 00D3                 intlevel1 0000               _OSCCONbits 008F  
