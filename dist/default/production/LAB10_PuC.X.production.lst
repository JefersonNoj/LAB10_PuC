

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue May 03 12:25:57 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211                           
   212                           	psect	idataBANK0
   213  00C2                     __pidataBANK0:
   214                           
   215                           ;initializer for _mensaje
   216  00C2  3420               	retlw	32
   217  00C3  3420               	retlw	32
   218  00C4  3420               	retlw	32
   219  00C5  3420               	retlw	32
   220  00C6  3420               	retlw	32
   221  00C7  340D               	retlw	13
   222  00C8  340A               	retlw	10
   223                           
   224                           	psect	nvCOMMON
   225  0079                     __pnvCOMMON:
   226  0079                     _indice:
   227  0079                     	ds	1
   228  0019                     _TXREG	set	25
   229  000B                     _INTCONbits	set	11
   230  0018                     _RCSTAbits	set	24
   231  0006                     _PORTB	set	6
   232  001A                     _RCREG	set	26
   233  000C                     _PIR1bits	set	12
   234  008C                     _PIE1bits	set	140
   235  009A                     _SPBRGH	set	154
   236  0099                     _SPBRG	set	153
   237  0098                     _TXSTAbits	set	152
   238  008F                     _OSCCONbits	set	143
   239  0086                     _TRISB	set	134
   240  0187                     _BAUDCTLbits	set	391
   241  0189                     _ANSELH	set	393
   242  0188                     _ANSEL	set	392
   243                           
   244                           	psect	cinit
   245  0011                     start_initialization:	
   246                           ; #config settings
   247                           
   248  0011                     __initialization:
   249                           
   250                           ; Initialize objects allocated to BANK0
   251  0011  1383               	bcf	3,7	;select IRP bank0
   252  0012  3027               	movlw	low (__pdataBANK0+7)
   253  0013  00FD               	movwf	btemp+-1
   254  0014  3000               	movlw	high __pidataBANK0
   255  0015  00FE               	movwf	btemp
   256  0016  30C2               	movlw	low __pidataBANK0
   257  0017  00FF               	movwf	btemp+1
   258  0018  3020               	movlw	low __pdataBANK0
   259  0019  0084               	movwf	4
   260  001A  120A  118A  20B3  120A  118A  	fcall	init_ram0
   261                           
   262                           ; Clear objects allocated to COMMON
   263  001F  01F7               	clrf	__pbssCOMMON& (0+127)
   264  0020  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   265  0021                     end_of_initialization:	
   266                           ;End of C runtime variable initialization code
   267                           
   268  0021                     __end_of__initialization:
   269  0021  0183               	clrf	3
   270  0022  120A  118A  2878   	ljmp	_main	;jump to C main() function
   271                           
   272                           	psect	bssCOMMON
   273  0077                     __pbssCOMMON:
   274  0077                     _caracter_cont:
   275  0077                     	ds	1
   276  0078                     _old_valor:
   277  0078                     	ds	1
   278                           
   279                           	psect	dataBANK0
   280  0020                     __pdataBANK0:
   281  0020                     _mensaje:
   282  0020                     	ds	7
   283                           
   284                           	psect	inittext
   285  00AF                     init_fetch0:	
   286                           ;	Called with low address in FSR and high address in W
   287                           
   288  00AF  087E               	movf	btemp,w
   289  00B0  008A               	movwf	10
   290  00B1  087F               	movf	btemp+1,w
   291  00B2  0082               	movwf	2
   292  00B3                     init_ram0:	
   293                           ;Called with:
   294                           ;	high address of idata address in btemp 
   295                           ;	low address of idata address in btemp+1 
   296                           ;	low address of data in FSR
   297                           ;	high address + 1 of data in btemp-1
   298                           
   299  00B3  120A  118A  20AF  120A  118A  	fcall	init_fetch0
   300  00B8  0080               	movwf	0
   301  00B9  0A84               	incf	4,f
   302  00BA  0804               	movf	4,w
   303  00BB  067D               	xorwf	btemp+-1,w
   304  00BC  1903               	btfsc	3,2
   305  00BD  3400               	retlw	0
   306  00BE  0AFF               	incf	btemp+1,f
   307  00BF  1903               	btfsc	3,2
   308  00C0  0AFE               	incf	btemp,f
   309  00C1  28B3               	goto	init_ram0
   310                           
   311                           	psect	cstackCOMMON
   312  0070                     __pcstackCOMMON:
   313  0070                     ?_setup:
   314  0070                     ?_imp_cadena:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ?_isr:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ??_isr:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_main:	
   324                           ; 1 bytes @ 0x0
   325                           
   326                           
   327                           ; 1 bytes @ 0x0
   328  0070                     	ds	4
   329  0074                     ??_setup:
   330  0074                     ??_imp_cadena:	
   331                           ; 1 bytes @ 0x4
   332                           
   333                           
   334                           ; 1 bytes @ 0x4
   335  0074                     	ds	1
   336  0075                     imp_cadena@cursor:
   337                           
   338                           ; 1 bytes @ 0x5
   339  0075                     	ds	1
   340  0076                     ??_main:
   341                           
   342                           ; 1 bytes @ 0x6
   343  0076                     	ds	1
   344                           
   345                           	psect	maintext
   346  0078                     __pmaintext:	
   347 ;;
   348 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   349 ;;
   350 ;; *************** function _main *****************
   351 ;; Defined at:
   352 ;;		line 59 in file "mainL10.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;		None
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      void 
   359 ;; Registers used:
   360 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   361 ;; Tracked objects:
   362 ;;		On entry : B00/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   366 ;;      Params:         0       0       0       0       0
   367 ;;      Locals:         0       0       0       0       0
   368 ;;      Temps:          1       0       0       0       0
   369 ;;      Totals:         1       0       0       0       0
   370 ;;Total ram usage:        1 bytes
   371 ;; Hardware stack levels required when called: 2
   372 ;; This function calls:
   373 ;;		_imp_cadena
   374 ;;		_setup
   375 ;; This function is called by:
   376 ;;		Startup code after reset
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380  0078                     _main:	
   381                           ;psect for function _main
   382                           
   383  0078                     l774:	
   384                           ;incstack = 0
   385                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   386                           
   387                           
   388                           ;mainL10.c: 60:     setup();
   389  0078  120A  118A  2025  120A  118A  	fcall	_setup
   390  007D                     l776:
   391                           
   392                           ;mainL10.c: 66:         indice = 0;
   393  007D  01F9               	clrf	_indice
   394  007E                     l778:
   395                           
   396                           ;mainL10.c: 67:         if (old_valor != mensaje[4]){
   397  007E  1283               	bcf	3,5	;RP0=0, select bank0
   398  007F  1303               	bcf	3,6	;RP1=0, select bank0
   399  0080  0824               	movf	_mensaje+4,w
   400  0081  0678               	xorwf	_old_valor,w
   401  0082  1903               	skipnz
   402  0083  2885               	goto	u101
   403  0084  2886               	goto	u100
   404  0085                     u101:
   405  0085  287D               	goto	l776
   406  0086                     u100:
   407  0086                     l780:
   408                           
   409                           ;mainL10.c: 69:             imp_cadena(indice);
   410  0086  3000               	movlw	0
   411  0087  120A  118A  2096  120A  118A  	fcall	_imp_cadena
   412  008C                     l782:
   413                           
   414                           ;mainL10.c: 70:             old_valor = mensaje[4];
   415  008C  1283               	bcf	3,5	;RP0=0, select bank0
   416  008D  1303               	bcf	3,6	;RP1=0, select bank0
   417  008E  0824               	movf	_mensaje+4,w
   418  008F  00F6               	movwf	??_main
   419  0090  0876               	movf	??_main,w
   420  0091  00F8               	movwf	_old_valor
   421  0092  287D               	goto	l776
   422  0093  120A  118A  280E   	ljmp	start
   423  0096                     __end_of_main:
   424                           
   425                           	psect	text1
   426  0025                     __ptext1:	
   427 ;; *************** function _setup *****************
   428 ;; Defined at:
   429 ;;		line 78 in file "mainL10.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;		None
   432 ;; Auto vars:     Size  Location     Type
   433 ;;		None
   434 ;; Return value:  Size  Location     Type
   435 ;;                  1    wreg      void 
   436 ;; Registers used:
   437 ;;		wreg, status,2, status,0
   438 ;; Tracked objects:
   439 ;;		On entry : 0/0
   440 ;;		On exit  : 0/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   443 ;;      Params:         0       0       0       0       0
   444 ;;      Locals:         0       0       0       0       0
   445 ;;      Temps:          0       0       0       0       0
   446 ;;      Totals:         0       0       0       0       0
   447 ;;Total ram usage:        0 bytes
   448 ;; Hardware stack levels used: 1
   449 ;; Hardware stack levels required when called: 1
   450 ;; This function calls:
   451 ;;		Nothing
   452 ;; This function is called by:
   453 ;;		_main
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457  0025                     _setup:	
   458                           ;psect for function _setup
   459                           
   460  0025                     l722:	
   461                           ;incstack = 0
   462                           ; Regs used in _setup: [wreg+status,2+status,0]
   463                           
   464                           
   465                           ;mainL10.c: 79:     ANSEL = 0;
   466  0025  1683               	bsf	3,5	;RP0=1, select bank3
   467  0026  1703               	bsf	3,6	;RP1=1, select bank3
   468  0027  0188               	clrf	8	;volatile
   469                           
   470                           ;mainL10.c: 80:     ANSELH = 0;
   471  0028  0189               	clrf	9	;volatile
   472                           
   473                           ;mainL10.c: 82:     TRISB = 0;
   474  0029  1683               	bsf	3,5	;RP0=1, select bank1
   475  002A  1303               	bcf	3,6	;RP1=0, select bank1
   476  002B  0186               	clrf	6	;volatile
   477                           
   478                           ;mainL10.c: 83:     PORTB = 0;
   479  002C  1283               	bcf	3,5	;RP0=0, select bank0
   480  002D  1303               	bcf	3,6	;RP1=0, select bank0
   481  002E  0186               	clrf	6	;volatile
   482  002F                     l724:
   483                           
   484                           ;mainL10.c: 85:     OSCCONbits.IRCF = 0b100;
   485  002F  1683               	bsf	3,5	;RP0=1, select bank1
   486  0030  1303               	bcf	3,6	;RP1=0, select bank1
   487  0031  080F               	movf	15,w	;volatile
   488  0032  398F               	andlw	-113
   489  0033  3840               	iorlw	64
   490  0034  008F               	movwf	15	;volatile
   491  0035                     l726:
   492                           
   493                           ;mainL10.c: 86:     OSCCONbits.SCS = 1;
   494  0035  140F               	bsf	15,0	;volatile
   495  0036                     l728:
   496                           
   497                           ;mainL10.c: 90:     TXSTAbits.SYNC = 0;
   498  0036  1218               	bcf	24,4	;volatile
   499  0037                     l730:
   500                           
   501                           ;mainL10.c: 91:     TXSTAbits.BRGH = 1;
   502  0037  1518               	bsf	24,2	;volatile
   503  0038                     l732:
   504                           
   505                           ;mainL10.c: 92:     BAUDCTLbits.BRG16 = 1;
   506  0038  1683               	bsf	3,5	;RP0=1, select bank3
   507  0039  1703               	bsf	3,6	;RP1=1, select bank3
   508  003A  1587               	bsf	7,3	;volatile
   509  003B                     l734:
   510                           
   511                           ;mainL10.c: 94:     SPBRG = 25;
   512  003B  3019               	movlw	25
   513  003C  1683               	bsf	3,5	;RP0=1, select bank1
   514  003D  1303               	bcf	3,6	;RP1=0, select bank1
   515  003E  0099               	movwf	25	;volatile
   516  003F                     l736:
   517                           
   518                           ;mainL10.c: 95:     SPBRGH = 0;
   519  003F  019A               	clrf	26	;volatile
   520  0040                     l738:
   521                           
   522                           ;mainL10.c: 97:     RCSTAbits.SPEN = 1;
   523  0040  1283               	bcf	3,5	;RP0=0, select bank0
   524  0041  1303               	bcf	3,6	;RP1=0, select bank0
   525  0042  1798               	bsf	24,7	;volatile
   526  0043                     l740:
   527                           
   528                           ;mainL10.c: 98:     RCSTAbits.RX9 = 0;
   529  0043  1318               	bcf	24,6	;volatile
   530  0044                     l742:
   531                           
   532                           ;mainL10.c: 99:     TXSTAbits.TXEN = 1;
   533  0044  1683               	bsf	3,5	;RP0=1, select bank1
   534  0045  1303               	bcf	3,6	;RP1=0, select bank1
   535  0046  1698               	bsf	24,5	;volatile
   536  0047                     l744:
   537                           
   538                           ;mainL10.c: 100:     RCSTAbits.CREN = 1;
   539  0047  1283               	bcf	3,5	;RP0=0, select bank0
   540  0048  1303               	bcf	3,6	;RP1=0, select bank0
   541  0049  1618               	bsf	24,4	;volatile
   542  004A                     l746:
   543                           
   544                           ;mainL10.c: 101:     TXSTAbits.TX9 = 0;
   545  004A  1683               	bsf	3,5	;RP0=1, select bank1
   546  004B  1303               	bcf	3,6	;RP1=0, select bank1
   547  004C  1318               	bcf	24,6	;volatile
   548  004D                     l748:
   549                           
   550                           ;mainL10.c: 104:     INTCONbits.GIE = 1;
   551  004D  178B               	bsf	11,7	;volatile
   552  004E                     l750:
   553                           
   554                           ;mainL10.c: 105:     INTCONbits.PEIE = 1;
   555  004E  170B               	bsf	11,6	;volatile
   556  004F                     l752:
   557                           
   558                           ;mainL10.c: 106:     PIE1bits.RCIE = 1;
   559  004F  168C               	bsf	12,5	;volatile
   560  0050                     l61:
   561  0050  0008               	return
   562  0051                     __end_of_setup:
   563                           
   564                           	psect	text2
   565  0096                     __ptext2:	
   566 ;; *************** function _imp_cadena *****************
   567 ;; Defined at:
   568 ;;		line 111 in file "mainL10.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;  cursor          1    wreg     unsigned char 
   571 ;; Auto vars:     Size  Location     Type
   572 ;;  cursor          1    5[COMMON] unsigned char 
   573 ;; Return value:  Size  Location     Type
   574 ;;                  1    wreg      void 
   575 ;; Registers used:
   576 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   577 ;; Tracked objects:
   578 ;;		On entry : 0/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   582 ;;      Params:         0       0       0       0       0
   583 ;;      Locals:         1       0       0       0       0
   584 ;;      Temps:          1       0       0       0       0
   585 ;;      Totals:         2       0       0       0       0
   586 ;;Total ram usage:        2 bytes
   587 ;; Hardware stack levels used: 1
   588 ;; Hardware stack levels required when called: 1
   589 ;; This function calls:
   590 ;;		Nothing
   591 ;; This function is called by:
   592 ;;		_main
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596  0096                     _imp_cadena:	
   597                           ;psect for function _imp_cadena
   598                           
   599                           
   600                           ;incstack = 0
   601                           ; Regs used in _imp_cadena: [wreg-fsr0h+status,2+status,0]
   602                           ;imp_cadena@cursor stored from wreg
   603  0096  00F5               	movwf	imp_cadena@cursor
   604  0097                     l756:
   605                           
   606                           ;mainL10.c: 112:     while(cursor<7){
   607  0097  28A8               	goto	l762
   608  0098                     l65:
   609                           
   610                           ;mainL10.c: 113:         if (PIR1bits.TXIF){
   611  0098  1283               	bcf	3,5	;RP0=0, select bank0
   612  0099  1303               	bcf	3,6	;RP1=0, select bank0
   613  009A  1E0C               	btfss	12,4	;volatile
   614  009B  289D               	goto	u61
   615  009C  289E               	goto	u60
   616  009D                     u61:
   617  009D  28A8               	goto	l762
   618  009E                     u60:
   619  009E                     l758:
   620                           
   621                           ;mainL10.c: 114:             TXREG = mensaje[cursor];
   622  009E  0875               	movf	imp_cadena@cursor,w
   623  009F  3E20               	addlw	(low (_mensaje| 0))& (0+255)
   624  00A0  0084               	movwf	4
   625  00A1  1383               	bcf	3,7	;select IRP bank0
   626  00A2  0800               	movf	0,w
   627  00A3  0099               	movwf	25	;volatile
   628  00A4                     l760:
   629                           
   630                           ;mainL10.c: 115:             cursor++;
   631  00A4  3001               	movlw	1
   632  00A5  00F4               	movwf	??_imp_cadena
   633  00A6  0874               	movf	??_imp_cadena,w
   634  00A7  07F5               	addwf	imp_cadena@cursor,f
   635  00A8                     l762:
   636                           
   637                           ;mainL10.c: 112:     while(cursor<7){
   638  00A8  3007               	movlw	7
   639  00A9  0275               	subwf	imp_cadena@cursor,w
   640  00AA  1C03               	skipc
   641  00AB  28AD               	goto	u71
   642  00AC  28AE               	goto	u70
   643  00AD                     u71:
   644  00AD  2898               	goto	l65
   645  00AE                     u70:
   646  00AE                     l68:
   647  00AE  0008               	return
   648  00AF                     __end_of_imp_cadena:
   649                           
   650                           	psect	text3
   651  0051                     __ptext3:	
   652 ;; *************** function _isr *****************
   653 ;; Defined at:
   654 ;;		line 48 in file "mainL10.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;		None
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   668 ;;      Params:         0       0       0       0       0
   669 ;;      Locals:         0       0       0       0       0
   670 ;;      Temps:          4       0       0       0       0
   671 ;;      Totals:         4       0       0       0       0
   672 ;;Total ram usage:        4 bytes
   673 ;; Hardware stack levels used: 1
   674 ;; This function calls:
   675 ;;		Nothing
   676 ;; This function is called by:
   677 ;;		Interrupt level 1
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681  0051                     _isr:	
   682                           ;psect for function _isr
   683                           
   684  0051                     i1l764:
   685                           
   686                           ;mainL10.c: 49:     if(PIR1bits.RCIF){
   687  0051  1283               	bcf	3,5	;RP0=0, select bank0
   688  0052  1303               	bcf	3,6	;RP1=0, select bank0
   689  0053  1E8C               	btfss	12,5	;volatile
   690  0054  2856               	goto	u8_21
   691  0055  2857               	goto	u8_20
   692  0056                     u8_21:
   693  0056  286F               	goto	i1l49
   694  0057                     u8_20:
   695  0057                     i1l766:
   696                           
   697                           ;mainL10.c: 50:         mensaje[caracter_cont] = RCREG;
   698  0057  081A               	movf	26,w	;volatile
   699  0058  00F0               	movwf	??_isr
   700  0059  0877               	movf	_caracter_cont,w
   701  005A  3E20               	addlw	(low (_mensaje| 0))& (0+255)
   702  005B  0084               	movwf	4
   703  005C  0870               	movf	??_isr,w
   704  005D  1383               	bcf	3,7	;select IRP bank0
   705  005E  0080               	movwf	0
   706                           
   707                           ;mainL10.c: 51:         PORTB = mensaje[caracter_cont];
   708  005F  0877               	movf	_caracter_cont,w
   709  0060  3E20               	addlw	(low (_mensaje| 0))& (0+255)
   710  0061  0084               	movwf	4
   711  0062  0800               	movf	0,w
   712  0063  0086               	movwf	6	;volatile
   713  0064                     i1l768:
   714                           
   715                           ;mainL10.c: 52:         caracter_cont++;
   716  0064  3001               	movlw	1
   717  0065  00F0               	movwf	??_isr
   718  0066  0870               	movf	??_isr,w
   719  0067  07F7               	addwf	_caracter_cont,f
   720  0068                     i1l770:
   721                           
   722                           ;mainL10.c: 53:         if (caracter_cont > 4)
   723  0068  3005               	movlw	5
   724  0069  0277               	subwf	_caracter_cont,w
   725  006A  1C03               	skipc
   726  006B  286D               	goto	u9_21
   727  006C  286E               	goto	u9_20
   728  006D                     u9_21:
   729  006D  286F               	goto	i1l49
   730  006E                     u9_20:
   731  006E                     i1l772:
   732                           
   733                           ;mainL10.c: 54:             caracter_cont = 0;
   734  006E  01F7               	clrf	_caracter_cont
   735  006F                     i1l49:
   736  006F  0873               	movf	??_isr+3,w
   737  0070  008A               	movwf	10
   738  0071  0872               	movf	??_isr+2,w
   739  0072  0084               	movwf	4
   740  0073  0E71               	swapf	??_isr+1,w
   741  0074  0083               	movwf	3
   742  0075  0EFE               	swapf	btemp,f
   743  0076  0E7E               	swapf	btemp,w
   744  0077  0009               	retfie
   745  0078                     __end_of_isr:
   746  007E                     btemp	set	126	;btemp
   747  007E                     wtemp0	set	126
   748                           
   749                           	psect	intentry
   750  0004                     __pintentry:	
   751                           ;incstack = 0
   752                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
   753                           
   754  0004                     interrupt_function:
   755  007E                     saved_w	set	btemp
   756  0004  00FE               	movwf	btemp
   757  0005  0E03               	swapf	3,w
   758  0006  00F1               	movwf	??_isr+1
   759  0007  0804               	movf	4,w
   760  0008  00F2               	movwf	??_isr+2
   761  0009  080A               	movf	10,w
   762  000A  00F3               	movwf	??_isr+3
   763  000B  120A  118A  2851   	ljmp	_isr
   764                           
   765                           	psect	idloc
   766                           
   767                           ;Config register IDLOC0 @ 0x2000
   768                           ;	unspecified, using default values
   769  2000                     	org	8192
   770  2000  3FFF               	dw	16383
   771                           
   772                           ;Config register IDLOC1 @ 0x2001
   773                           ;	unspecified, using default values
   774  2001                     	org	8193
   775  2001  3FFF               	dw	16383
   776                           
   777                           ;Config register IDLOC2 @ 0x2002
   778                           ;	unspecified, using default values
   779  2002                     	org	8194
   780  2002  3FFF               	dw	16383
   781                           
   782                           ;Config register IDLOC3 @ 0x2003
   783                           ;	unspecified, using default values
   784  2003                     	org	8195
   785  2003  3FFF               	dw	16383
   786                           
   787                           	psect	config
   788                           
   789                           ;Config register CONFIG1 @ 0x2007
   790                           ;	Oscillator Selection bits
   791                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   792                           ;	Watchdog Timer Enable bit
   793                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   794                           ;	Power-up Timer Enable bit
   795                           ;	PWRTE = OFF, PWRT disabled
   796                           ;	RE3/MCLR pin function select bit
   797                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   798                           ;	Code Protection bit
   799                           ;	CP = OFF, Program memory code protection is disabled
   800                           ;	Data Code Protection bit
   801                           ;	CPD = OFF, Data memory code protection is disabled
   802                           ;	Brown Out Reset Selection bits
   803                           ;	BOREN = OFF, BOR disabled
   804                           ;	Internal External Switchover bit
   805                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   806                           ;	Fail-Safe Clock Monitor Enabled bit
   807                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   808                           ;	Low Voltage Programming Enable bit
   809                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   810                           ;	In-Circuit Debugger Mode bit
   811                           ;	DEBUG = 0x1, unprogrammed default
   812  2007                     	org	8199
   813  2007  20D4               	dw	8404
   814                           
   815                           ;Config register CONFIG2 @ 0x2008
   816                           ;	Brown-out Reset Selection bit
   817                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   818                           ;	Flash Program Memory Self Write Enable bits
   819                           ;	WRT = OFF, Write protection off
   820  2008                     	org	8200
   821  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         2
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      0       7
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_imp_cadena

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      45
                                              6 COMMON     1     1      0
                         _imp_cadena
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _imp_cadena                                           2     2      0      45
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _imp_cadena
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       7       5        8.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      11      12        0.0%
ABS                  0      0      11       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue May 03 12:25:57 2022

                      pc 0002                       l61 0050                       l65 0098  
                     l68 00AE                       u60 009E                       u61 009D  
                     u70 00AE                       u71 00AD                       fsr 0004  
                    l730 0037                      l722 0025                      l740 0043  
                    l732 0038                      l724 002F                      l750 004E  
                    l742 0044                      l734 003B                      l726 0035  
                    l760 00A4                      l752 004F                      l744 0047  
                    l736 003F                      l728 0036                      l762 00A8  
                    l746 004A                      l738 0040                      l756 0097  
                    l748 004D                      l780 0086                      l758 009E  
                    l782 008C                      l774 0078                      l776 007D  
                    l778 007E                      u100 0086                      u101 0085  
                    _isr 0051                      fsr0 0004                      indf 0000  
                   ?_isr 0070                     i1l49 006F                     u8_20 0057  
                   u8_21 0056                     u9_20 006E                     u9_21 006D  
                   _main 0078                     btemp 007E                     start 000E  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l770 0068                    i1l772 006E                    i1l764 0051  
                  i1l766 0057                    i1l768 0064                    _RCREG 001A  
                  _SPBRG 0099                    _PORTB 0006                    _TRISB 0086  
                  _TXREG 0019                    _setup 0025                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 0096                   ??_main 0076                   ?_setup 0070  
                 _ANSELH 0189                   _SPBRGH 009A                   _indice 0079  
                 saved_w 007E  __end_of__initialization 0021           __pcstackCOMMON 0070  
           __pidataBANK0 00C2            __end_of_setup 0051                  ??_setup 0074  
             __pnvCOMMON 0079               __pmaintext 0078               __pintentry 0004  
       imp_cadena@cursor 0075               _imp_cadena 0096                  __ptext1 0025  
                __ptext2 0096                  __ptext3 0051                  _mensaje 0020  
   end_of_initialization 0021                _RCSTAbits 0018            _caracter_cont 0077  
              _TXSTAbits 0098              ?_imp_cadena 0070              _BAUDCTLbits 0187  
    start_initialization 0011              __end_of_isr 0078               init_fetch0 00AF  
            __pdataBANK0 0020              __pbssCOMMON 0077                ___latbits 0002  
              _old_valor 0078        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C             ??_imp_cadena 0074       __end_of_imp_cadena 00AF  
             _INTCONbits 000B                 init_ram0 00B3                 intlevel1 0000  
             _OSCCONbits 008F  
